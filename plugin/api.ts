import {isBackground} from "@addon-core/browser";
import {getEnv, getService as getServiceProxy} from "adnbn";
import {getService as getServiceOrigin} from "adnbn/service";
import isURL from "is-url";
import type {RemoteConfig, RemoteConfigOptions} from "./types";

export const getRemoteConfig = async <T extends RemoteConfig = RemoteConfig>(): Promise<T> => {
    const service = isBackground() ? getServiceOrigin : getServiceProxy;

    return await service("@adnbn/plugin-remote-config/service").get();
};

export const getRemoteConfigOptions = (): RemoteConfigOptions => {
    let options: Partial<RemoteConfigOptions> = {};

    try {
        //@ts-expect-error: __REMOTE_CONFIG_OPTIONS__ is a virtual variable generated by the bundler `plugin/index.ts`
        options = __REMOTE_CONFIG_OPTIONS__;
    } catch {
        console.error(
            "Failed to load @adnbn/plugin-remote-config parameters. Make sure the plugin is properly configured in the adnbn configuration file."
        );
    }

    let {url, ttl = 1440, config = {}} = options;

    if (typeof url === "string") {
        url = isURL(url) ? url : getEnv(url);
    } else {
        url = undefined;
    }

    return {ttl, config, url};
};
